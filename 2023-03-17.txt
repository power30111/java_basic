Enchance For Loop(향상된 루프) java5에서 처음나왔고, int i=0; 꼴이나 배열의 크기를 입력하지않아도 됨.(파이썬마냥)
즉 for(int i=0; i<array.length; i++) 또는 for(int mark:marks) 

배열을 선언하고 초기화했을떄 -> ex) int [] Array = new int[5]; //Array라는 int형 배열을 선언하였는데, 크기가 5이다.
이때 Array내부의 원소는 [0,0,0,0,0]이다. 이부분을 다른 수로 채우고싶을땐 Arrays.fill(Array,N)을 하면 N으로 채워진다.

비교 ? 
equals()메소드는 비교하고자 하는 두개의 대상의 값 자체를 비교
==연산자는 비교하고자 하는 두개의 대상의 주소값을 비교

정렬 ? 
Arrays.sort(array)

변수의 최대값 최소값을 모를떄 
Integer.Max_VALUE 와 Integer.Min_VALUE 사용하면됨.

최대값과 최소값 찾기 (Max,Min)
-> Collections.Max(), Collections.Min()

소수점관련해서 돈이나,정확한 계산이 필요한 나눗셈의 경우
float, double 이 아닌 BigDecimal 을 써야한다. BigDecimal은 new BigDecimal(변수)로 객체를 생성할수있다.
BigDecimal.divide()메서드를 사용하여 정확히 나눌수있다. ex) BigDecimal(A).divide(new BigDecimal(B));
여기서 옵션이 더있는데 알아둬야할 옵션은 두가지.
Precision -> 정확도 (소수점 몇자리까지 표시?)
Rounding mode -> 반올림(반올림 할까?)
적용해서 예시를 들어보면 BigDecimal(A).divide(new BigDecimal(B),3,RoundingMode.UP); //3번쨰 소수점자리까지 표시하고 반올림

메서드에 다양한 숫자의 argument를 입력하고싶은경우 (가변인수, 인자 여러개)
ex) void print(int... values) 로 나타낼수있다. 배열로 입력되는것같다.
단. 가변인수는 모든 인자들중 맨뒤에 와야한다. ex) void print(int ... values, String name) -> error

클래스를 출력할떄 출력형식을 변경할수있다.
ex) public String toString(){return ...} 이후
System.out.println(class) 이렇게 호출하면 ...에 해당하는 내용이 출력된다. 

ArrayList
가변리스트이다 .add()메서드, .remove()메서드로 삽입또는 지울수있다. 자세한건 검색.
선언하는 건 ArrayList items = new ArrayList(); 로 할수있는데, 여기서 제네릭(자바5에서 나온 기능)을 사용해야한다.
즉 어떤 자료형을 ArrayList에 담을건지 명시해야한다는 뜻이다. ex) ArrayList<String> items = new ArrayList<String>();
일반 Array와는 메서드도 다르므로 주의